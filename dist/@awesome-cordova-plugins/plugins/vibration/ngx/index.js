import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var Vibration = /** @class */ (function (_super) {
    __extends(Vibration, _super);
    function Vibration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Vibration.prototype.vibrate = function (time) { return cordova(this, "vibrate", { "sync": true }, arguments); };
    Vibration.pluginName = "Vibration";
    Vibration.plugin = "cordova-plugin-vibration";
    Vibration.pluginRef = "navigator";
    Vibration.repo = "https://github.com/apache/cordova-plugin-vibration";
    Vibration.platforms = ["Android", "iOS", "Windows"];
    Vibration.decorators = [
        { type: Injectable }
    ];
    return Vibration;
}(AwesomeCordovaNativePlugin));
export { Vibration };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvdmlicmF0aW9uL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQXFDN0QsNkJBQTBCOzs7O0lBU3ZELDJCQUFPLGFBQUMsSUFBdUI7Ozs7Ozs7Z0JBVmhDLFVBQVU7O29CQXJDWDtFQXNDK0IsMEJBQTBCO1NBQTVDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XHJcblxyXG4vKipcclxuICogQG5hbWUgVmlicmF0aW9uXHJcbiAqIEBwcmVtaWVyIHZpYnJhdGlvblxyXG4gKiBAZGVzY3JpcHRpb24gVmlicmF0ZXMgdGhlIGRldmljZVxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBWaWJyYXRpb24gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvdmlicmF0aW9uL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgdmlicmF0aW9uOiBWaWJyYXRpb24pIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogLy8gVmlicmF0ZSB0aGUgZGV2aWNlIGZvciBhIHNlY29uZFxyXG4gKiAvLyBEdXJhdGlvbiBpcyBpZ25vcmVkIG9uIGlPUy5cclxuICogdGhpcy52aWJyYXRpb24udmlicmF0ZSgxMDAwKTtcclxuICpcclxuICogLy8gVmlicmF0ZSAyIHNlY29uZHNcclxuICogLy8gUGF1c2UgZm9yIDEgc2Vjb25kXHJcbiAqIC8vIFZpYnJhdGUgZm9yIDIgc2Vjb25kc1xyXG4gKiAvLyBQYXR0ZXJucyB3b3JrIG9uIEFuZHJvaWQgYW5kIFdpbmRvd3Mgb25seVxyXG4gKiB0aGlzLnZpYnJhdGlvbi52aWJyYXRlKFsyMDAwLDEwMDAsMjAwMF0pO1xyXG4gKlxyXG4gKiAvLyBTdG9wIGFueSBjdXJyZW50IHZpYnJhdGlvbnMgaW1tZWRpYXRlbHlcclxuICogLy8gV29ya3Mgb24gQW5kcm9pZCBhbmQgV2luZG93cyBvbmx5XHJcbiAqIHRoaXMudmlicmF0aW9uLnZpYnJhdGUoMCk7XHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ1ZpYnJhdGlvbicsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdmlicmF0aW9uJyxcclxuICBwbHVnaW5SZWY6ICduYXZpZ2F0b3InLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vYXBhY2hlL2NvcmRvdmEtcGx1Z2luLXZpYnJhdGlvbicsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MnXSxcclxufSlcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgVmlicmF0aW9uIGV4dGVuZHMgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIFZpYnJhdGVzIHRoZSBkZXZpY2UgZm9yIGdpdmVuIGFtb3VudCBvZiB0aW1lLlxyXG4gICAqXHJcbiAgICogQHBhcmFtIHRpbWUge251bWJlcnxudW1iZXJbXX0gTWlsbGlzZWNvbmRzIHRvIHZpYnJhdGUgdGhlIGRldmljZS4gSWYgcGFzc2VkIGFuIGFycmF5IG9mIG51bWJlcnMsIGl0IHdpbGwgZGVmaW5lIGEgdmlicmF0aW9uIHBhdHRlcm4uIFBhc3MgMCB0byBzdG9wIGFueSB2aWJyYXRpb24gaW1tZWRpYXRlbHkuXHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgc3luYzogdHJ1ZSxcclxuICB9KVxyXG4gIHZpYnJhdGUodGltZTogbnVtYmVyIHwgbnVtYmVyW10pIHt9XHJcbn1cclxuIl19