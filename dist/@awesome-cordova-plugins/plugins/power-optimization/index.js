var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var PowerOptimizationOriginal = /** @class */ (function (_super) {
    __extends(PowerOptimizationOriginal, _super);
    function PowerOptimizationOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PowerOptimizationOriginal.prototype.IsIgnoringBatteryOptimizations = function () { return cordova(this, "IsIgnoringBatteryOptimizations", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestOptimizations = function () { return cordova(this, "RequestOptimizations", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestOptimizationsMenu = function () { return cordova(this, "RequestOptimizationsMenu", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.IsIgnoringDataSaver = function () { return cordova(this, "IsIgnoringDataSaver", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.RequestDataSaverMenu = function () { return cordova(this, "RequestDataSaverMenu", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.HaveProtectedAppsCheck = function () { return cordova(this, "HaveProtectedAppsCheck", { "sync": true }, arguments); };
    PowerOptimizationOriginal.prototype.ProtectedAppCheck = function () { return cordova(this, "ProtectedAppCheck", { "sync": true }, arguments); };
    PowerOptimizationOriginal.pluginName = "PowerOptimization";
    PowerOptimizationOriginal.plugin = "cordova-plugin-power-optimization";
    PowerOptimizationOriginal.pluginRef = "cordova.plugins.PowerOptimization";
    PowerOptimizationOriginal.repo = "https://github.com/snt1017/cordova-plugin-power-optimization";
    PowerOptimizationOriginal.platforms = ["Android"];
    return PowerOptimizationOriginal;
}(AwesomeCordovaNativePlugin));
var PowerOptimization = new PowerOptimizationOriginal();
export { PowerOptimization };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvcG93ZXItb3B0aW1pemF0aW9uL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFDQSxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQTRCckQscUNBQTBCOzs7O0lBUS9ELDBEQUE4QjtJQVU5QixnREFBb0I7SUFVcEIsb0RBQXdCO0lBVXhCLCtDQUFtQjtJQVVuQixnREFBb0I7SUFVcEIsa0RBQXNCO0lBVXRCLDZDQUFpQjs7Ozs7OzRCQWpHbkI7RUE2QnVDLDBCQUEwQjtTQUFwRCxpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XHJcbi8qKlxyXG4gKiBAbmFtZSBQb3dlciBPcHRpbWl6YXRpb25cclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIEFuZHJvaWQgQ3VzdG9tIFJvbXMgbWFkZSBzb21ldGltZXMgeW91ciBhcHBzIHVuZnVuY3Rpb25hbCBkdWUgdG8gYmVpbmcga2lsbGVkIGluIHRoZSBiYWNrZ3JvdW5kLCBub3RpZmljYXRpb24gbWVzc2FnZXMgZG8gbm90IGFwcGVhcmluZyBvciB5b3VyIHNlcnZpY2VzIGJlaW5nIGtpbGxlZCBieSBhZ3Jlc3NpdmUgcG93ZXIgc2F2aW5nIG1vZGUuXHJcbiAqIFRoZSBQb3dlciBPcHRpbWl6YXRpb24gcGx1Z2luIGdpdmUgeW91IGFuZHJvaWQgUG93ZXJNYW5hZ2VyIG1ldGhvZHMgd2l0aCBjb3Jkb3ZhLlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBQb3dlck9wdGltaXphdGlvbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9wb3dlci1vcHRpbWl6YXRpb24vbmd4JztcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBwb3dlck9wdGltaXphdGlvbjogUG93ZXJPcHRpbWl6YXRpb24pIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogdGhpcy5wb3dlck9wdGltaXphdGlvbi5Jc0lnbm9yaW5nQmF0dGVyeU9wdGltaXphdGlvbnMoKVxyXG4gKiAgIC50aGVuKG9uU3VjY2VzcylcclxuICogICAuY2F0Y2gob25FcnJvcik7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ1Bvd2VyT3B0aW1pemF0aW9uJyxcclxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb24nLFxyXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5Qb3dlck9wdGltaXphdGlvbicsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvbicsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXSxcclxufSlcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgUG93ZXJPcHRpbWl6YXRpb24gZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogQ2hlY2sgaWYgdGhlIGJhdHRlcnkgb3B0aW1pemF0aW9uIGlzIGlnbm9yaW5nXHJcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBJc0lnbm9yaW5nQmF0dGVyeU9wdGltaXphdGlvbnMoKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgLyoqXHJcbiAgICogUmVxdWVzdCBwZXJtaXNzb24gdG8gaWdub3JlIG9wdGltaXphdGlvbnM6XHJcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBSZXF1ZXN0T3B0aW1pemF0aW9ucygpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBHbyB0byBiYXR0ZXJ5IG9wdGltaXphdGlvbnMgY29uZmlndXJhdGlvbnMgbWVudTpcclxuICAgKiBGb3IgbW9yZSBpbmZvLCBwbGVhc2UgY2hlY2sgaHR0cHM6Ly9naXRodWIuY29tL3NudDEwMTcvY29yZG92YS1wbHVnaW4tcG93ZXItb3B0aW1pemF0aW9uXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgc3luYzogdHJ1ZSB9KVxyXG4gIFJlcXVlc3RPcHRpbWl6YXRpb25zTWVudSgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBDaGVjayBpZiBoYXZlIGFueSBkYXRhIHJlc3RyaWN0aW9ucyBpbiBiYWNrZ3JvdW5kOlxyXG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXHJcbiAgSXNJZ25vcmluZ0RhdGFTYXZlcigpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBHbyB0byBkYXRhIHJlc3RyaWN0aW9ucyBpbiBiYWNrZ3JvdW5kIGNvbmZpZ3VyYXRpb25zIG1lbnU6XHJcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBSZXF1ZXN0RGF0YVNhdmVyTWVudSgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuICAvKipcclxuICAgKiBDaGVjayBpZiBoYXZlIGFub3RoZXIgYmF0dGVyeSByZXN0cmljdGlvbiBpcyBwcmVzZW50IGludG8gcGhvbmUgKGxpa2UgaHVhd2VpLCB4aWFvbWksIGV0Yyk6XHJcbiAgICogRm9yIG1vcmUgaW5mbywgcGxlYXNlIGNoZWNrIGh0dHBzOi8vZ2l0aHViLmNvbS9zbnQxMDE3L2NvcmRvdmEtcGx1Z2luLXBvd2VyLW9wdGltaXphdGlvblxyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBIYXZlUHJvdGVjdGVkQXBwc0NoZWNrKCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIEdvIHRvIGNvbmZpZ3VyYXRpb25zIG1lbnUgaWYgYW5vdGhlciBiYXR0ZXJ5IHJlc3RyaWN0aW9uIGlzIHByZXNlbnQgaW50byBwaG9uZSAobGlrZSBodWF3ZWksIHhpYW9taSwgZXRjKS4gWW91IGNhbiBzZW5kIHRydWUgaW50byBwYXJhbXMgaWYgeW91IHdhbnQgdG8gZm9yY2Ugc2hvdyB0aGUgbWVudSAoaXMgb25seSBzaG93IHRoZSBmaXN0IHRpbWUgd2l0aG91dCBwYXJhbXMpOlxyXG4gICAqIEZvciBtb3JlIGluZm8sIHBsZWFzZSBjaGVjayBodHRwczovL2dpdGh1Yi5jb20vc250MTAxNy9jb3Jkb3ZhLXBsdWdpbi1wb3dlci1vcHRpbWl6YXRpb25cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXHJcbiAgUHJvdGVjdGVkQXBwQ2hlY2soKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19