import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var TextToSpeechAdvanced = /** @class */ (function (_super) {
    __extends(TextToSpeechAdvanced, _super);
    function TextToSpeechAdvanced() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TextToSpeechAdvanced.prototype.speak = function (textOrOptions) { return cordova(this, "speak", { "successIndex": 1, "errorIndex": 2 }, arguments); };
    TextToSpeechAdvanced.prototype.stop = function () { return cordova(this, "stop", {}, arguments); };
    TextToSpeechAdvanced.prototype.getVoices = function () { return cordova(this, "getVoices", {}, arguments); };
    TextToSpeechAdvanced.pluginName = "Text To Speech Advanced";
    TextToSpeechAdvanced.plugin = "cordova-plugin-tts-advanced";
    TextToSpeechAdvanced.pluginRef = "TTS";
    TextToSpeechAdvanced.repo = "https://github.com/spasma/cordova-plugin-tts-advanced";
    TextToSpeechAdvanced.platforms = ["Android", "iOS"];
    TextToSpeechAdvanced.decorators = [
        { type: Injectable }
    ];
    return TextToSpeechAdvanced;
}(AwesomeCordovaNativePlugin));
export { TextToSpeechAdvanced };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvdGV4dC10by1zcGVlY2gtYWR2YW5jZWQvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sdUNBQStDLE1BQU0sK0JBQStCLENBQUM7O0lBdURsRCx3Q0FBMEI7Ozs7SUFXbEUsb0NBQUssYUFBQyxhQUFrQztJQVV4QyxtQ0FBSTtJQVVKLHdDQUFTOzs7Ozs7O2dCQWhDVixVQUFVOzsrQkF2RFg7RUF3RDBDLDBCQUEwQjtTQUF2RCxvQkFBb0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRUU09wdGlvbnMge1xyXG4gIC8qKiB0ZXh0IHRvIHNwZWFrICovXHJcbiAgdGV4dDogc3RyaW5nO1xyXG4gIC8qKiBjYW5jZWwsIGJvb2xlYW46IHRydWUvZmFsc2UgKi9cclxuICBpZGVudGlmaWVyOiBzdHJpbmc7XHJcbiAgLyoqIHZvaWNlIGlkZW50aWZpZXIgKGlPUyAvIEFuZHJvaWQpIGZyb20gZ2V0Vm9pY2VzICovXHJcbiAgbG9jYWxlPzogc3RyaW5nO1xyXG4gIC8qKiBzcGVlZCByYXRlLCAwIH4gMSAqL1xyXG4gIHJhdGU/OiBudW1iZXI7XHJcbiAgLyoqIHBpdGNoLCAwIH4gMSAqL1xyXG4gIHBpdGNoPzogbnVtYmVyO1xyXG4gIC8qKiBjYW5jZWwsIGJvb2xlYW46IHRydWUvZmFsc2UgKi9cclxuICBjYW5jZWw/OiBib29sZWFuO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFRUU1ZvaWNlIHtcclxuICAvKiogVm9pY2UgbmFtZSAqL1xyXG4gIG5hbWU6IHN0cmluZztcclxuICAvKiogVm9pY2UgbGFuZ3VhZ2UgKi9cclxuICBsYW5ndWFnZTogc3RyaW5nO1xyXG4gIC8qKiBWb2ljZSBpZGVudGlmaWVyIHN0cmluZyAqL1xyXG4gIGlkZW50aWZpZXI6IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIEBuYW1lIFRleHQgVG8gU3BlZWNoIEFkdmFuY2VkXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUZXh0IHRvIFNwZWVjaCBwbHVnaW5cclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgVGV4dFRvU3BlZWNoQWR2YW5jZWQgfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvdGV4dC10by1zcGVlY2gtYWR2YW5jZWQvbmd4JztcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSB0dHM6IFRleHRUb1NwZWVjaEFkdmFuY2VkKSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqIHRoaXMudHRzLnNwZWFrKCdIZWxsbyBXb3JsZCcpXHJcbiAqICAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ1N1Y2Nlc3MnKSlcclxuICogICAuY2F0Y2goKHJlYXNvbjogYW55KSA9PiBjb25zb2xlLmxvZyhyZWFzb24pKTtcclxuICpcclxuICogYGBgXHJcbiAqIEBpbnRlcmZhY2VzXHJcbiAqIFRUU09wdGlvbnNcclxuICogVFRTVm9pY2VcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdUZXh0IFRvIFNwZWVjaCBBZHZhbmNlZCcsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tdHRzLWFkdmFuY2VkJyxcclxuICBwbHVnaW5SZWY6ICdUVFMnLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vc3Bhc21hL2NvcmRvdmEtcGx1Z2luLXR0cy1hZHZhbmNlZCcsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRleHRUb1NwZWVjaEFkdmFuY2VkIGV4dGVuZHMgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqIFRoaXMgZnVuY3Rpb24gc3BlYWtzXHJcbiAgICpcclxuICAgKiBAcGFyYW0gdGV4dE9yT3B0aW9ucyB7c3RyaW5nIHwgVFRTT3B0aW9uc30gVGV4dCB0byBzcGVhayBvciBUVFNPcHRpb25zXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIHRoZSBzcGVha2luZyBmaW5pc2hlc1xyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN1Y2Nlc3NJbmRleDogMSxcclxuICAgIGVycm9ySW5kZXg6IDIsXHJcbiAgfSlcclxuICBzcGVhayh0ZXh0T3JPcHRpb25zOiBzdHJpbmcgfCBUVFNPcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFN0b3AgYW55IGN1cnJlbnQgVFRTIHBsYXliYWNrXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBzdG9wKCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBHZXQgYWxsIHZvaWNlc1xyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8VFRTVm9pY2VbXT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGdldFZvaWNlcygpOiBQcm9taXNlPFRUU1ZvaWNlW10+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19