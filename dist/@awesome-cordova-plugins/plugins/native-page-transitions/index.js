var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var NativePageTransitionsOriginal = /** @class */ (function (_super) {
    __extends(NativePageTransitionsOriginal, _super);
    function NativePageTransitionsOriginal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    NativePageTransitionsOriginal.prototype.slide = function (options) { return cordova(this, "slide", {}, arguments); };
    NativePageTransitionsOriginal.prototype.flip = function (options) { return cordova(this, "flip", {}, arguments); };
    NativePageTransitionsOriginal.prototype.fade = function (options) { return cordova(this, "fade", { "platforms": ["iOS", "Android"] }, arguments); };
    NativePageTransitionsOriginal.prototype.drawer = function (options) { return cordova(this, "drawer", { "platforms": ["iOS", "Android"] }, arguments); };
    NativePageTransitionsOriginal.prototype.curl = function (options) { return cordova(this, "curl", { "platforms": ["iOS"] }, arguments); };
    NativePageTransitionsOriginal.prototype.executePendingTransition = function () { return cordova(this, "executePendingTransition", {}, arguments); };
    NativePageTransitionsOriginal.prototype.cancelPendingTransition = function () { return cordova(this, "cancelPendingTransition", {}, arguments); };
    NativePageTransitionsOriginal.pluginName = "NativePageTransitions";
    NativePageTransitionsOriginal.plugin = "com.telerik.plugins.nativepagetransitions";
    NativePageTransitionsOriginal.pluginRef = "plugins.nativepagetransitions";
    NativePageTransitionsOriginal.repo = "https://github.com/Telerik-Verified-Plugins/NativePageTransitions";
    NativePageTransitionsOriginal.platforms = ["Android", "iOS", "Windows Phone 8"];
    return NativePageTransitionsOriginal;
}(AwesomeCordovaNativePlugin));
var NativePageTransitions = new NativePageTransitionsOriginal();
export { NativePageTransitions };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvbmF0aXZlLXBhZ2UtdHJhbnNpdGlvbnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUNBLE9BQU8sdUNBQStDLE1BQU0sK0JBQStCLENBQUM7O0lBcUVqRCx5Q0FBMEI7Ozs7SUFRbkUscUNBQUssYUFBQyxPQUFnQztJQVd0QyxvQ0FBSSxhQUFDLE9BQWdDO0lBV3JDLG9DQUFJLGFBQUMsT0FBZ0M7SUFXckMsc0NBQU0sYUFBQyxPQUFnQztJQVd2QyxvQ0FBSSxhQUFDLE9BQWdDO0lBVXJDLHdEQUF3QjtJQVV4Qix1REFBdUI7Ozs7OztnQ0E5SXpCO0VBc0UyQywwQkFBMEI7U0FBeEQscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb3Jkb3ZhLCBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyB7XHJcbiAgZGlyZWN0aW9uPzogc3RyaW5nO1xyXG4gIGR1cmF0aW9uPzogbnVtYmVyO1xyXG4gIHNsb3dkb3duZmFjdG9yPzogbnVtYmVyO1xyXG4gIHNsaWRlUGl4ZWxzPzogbnVtYmVyO1xyXG4gIGlvc2RlbGF5PzogbnVtYmVyO1xyXG4gIGFuZHJvaWRkZWxheT86IG51bWJlcjtcclxuICB3aW5waG9uZWRlbGF5PzogbnVtYmVyO1xyXG4gIGZpeGVkUGl4ZWxzVG9wPzogbnVtYmVyO1xyXG4gIGZpeGVkUGl4ZWxzQm90dG9tPzogbnVtYmVyO1xyXG4gIGFjdGlvbj86IHN0cmluZztcclxuICBvcmlnaW4/OiBzdHJpbmc7XHJcbiAgaHJlZj86IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIEBuYW1lIE5hdGl2ZSBQYWdlIFRyYW5zaXRpb25zXHJcbiAqIEBkZXNjcmlwdGlvblxyXG4gKiBUaGUgTmF0aXZlIFBhZ2UgVHJhbnNpdGlvbnMgcGx1Z2luIHVzZXMgbmF0aXZlIGhhcmR3YXJlIGFjY2VsZXJhdGlvbiB0byBhbmltYXRlIHlvdXIgdHJhbnNpdGlvbnMgYmV0d2VlbiB2aWV3cy4gWW91IGhhdmUgY29tcGxldGUgY29udHJvbCBvdmVyIHRoZSB0eXBlIG9mIHRyYW5zaXRpb24sIHRoZSBkdXJhdGlvbiwgYW5kIGRpcmVjdGlvbi5cclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgTmF0aXZlUGFnZVRyYW5zaXRpb25zLCBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9uYXRpdmUtcGFnZS10cmFuc2l0aW9ucy9uZ3gnO1xyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIG5hdGl2ZVBhZ2VUcmFuc2l0aW9uczogTmF0aXZlUGFnZVRyYW5zaXRpb25zKSB7IH1cclxuICpcclxuICogLi4uXHJcbiAqXHJcbiAqXHJcbiAqIC8vIGV4YW1wbGUgb2YgYWRkaW5nIGEgdHJhbnNpdGlvbiB3aGVuIGEgcGFnZS9tb2RhbCBjbG9zZXNcclxuICogaW9uVmlld1dpbGxMZWF2ZSgpIHtcclxuICpcclxuICogIGxldCBvcHRpb25zOiBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyA9IHtcclxuICogICAgIGRpcmVjdGlvbjogJ3VwJyxcclxuICogICAgIGR1cmF0aW9uOiA1MDAsXHJcbiAqICAgICBzbG93ZG93bmZhY3RvcjogMyxcclxuICogICAgIHNsaWRlUGl4ZWxzOiAyMCxcclxuICogICAgIGlvc2RlbGF5OiAxMDAsXHJcbiAqICAgICBhbmRyb2lkZGVsYXk6IDE1MCxcclxuICogICAgIGZpeGVkUGl4ZWxzVG9wOiAwLFxyXG4gKiAgICAgZml4ZWRQaXhlbHNCb3R0b206IDYwXHJcbiAqICAgIH1cclxuICpcclxuICogIHRoaXMubmF0aXZlUGFnZVRyYW5zaXRpb25zLnNsaWRlKG9wdGlvbnMpXHJcbiAqICAgIC50aGVuKG9uU3VjY2VzcylcclxuICogICAgLmNhdGNoKG9uRXJyb3IpO1xyXG4gKlxyXG4gKiB9XHJcbiAqXHJcbiAqXHJcbiAqIC8vIGV4YW1wbGUgb2YgYWRkaW5nIGEgdHJhbnNpdGlvbiB3aGVuIHB1c2hpbmcgYSBuZXcgcGFnZVxyXG4gKiBvcGVuUGFnZShwYWdlOiBhbnkpIHtcclxuICpcclxuICogICB0aGlzLm5hdGl2ZVBhZ2VUcmFuc2l0aW9ucy5zbGlkZShvcHRpb25zKTtcclxuICogICB0aGlzLm5hdkN0cmwucHVzaChwYWdlKTtcclxuICpcclxuICogfVxyXG4gKlxyXG4gKiBgYGBcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdOYXRpdmVQYWdlVHJhbnNpdGlvbnMnLFxyXG4gIHBsdWdpbjogJ2NvbS50ZWxlcmlrLnBsdWdpbnMubmF0aXZlcGFnZXRyYW5zaXRpb25zJyxcclxuICBwbHVnaW5SZWY6ICdwbHVnaW5zLm5hdGl2ZXBhZ2V0cmFuc2l0aW9ucycsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9UZWxlcmlrLVZlcmlmaWVkLVBsdWdpbnMvTmF0aXZlUGFnZVRyYW5zaXRpb25zJyxcclxuICBwbGF0Zm9ybXM6IFsnQW5kcm9pZCcsICdpT1MnLCAnV2luZG93cyBQaG9uZSA4J10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE5hdGl2ZVBhZ2VUcmFuc2l0aW9ucyBleHRlbmRzIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIHtcclxuICAvKipcclxuICAgKiBQZXJmb3JtIGEgc2xpZGUgYW5pbWF0aW9uXHJcbiAgICpcclxuICAgKiBAcGFyYW0gb3B0aW9ucyB7TmF0aXZlVHJhbnNpdGlvbk9wdGlvbnN9IE9wdGlvbnMgZm9yIHRoZSB0cmFuc2l0aW9uXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgc2xpZGUob3B0aW9uczogTmF0aXZlVHJhbnNpdGlvbk9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUGVyZm9ybSBhIGZsaXAgYW5pbWF0aW9uXHJcbiAgICpcclxuICAgKiBAcGFyYW0gb3B0aW9ucyB7TmF0aXZlVHJhbnNpdGlvbk9wdGlvbnN9IE9wdGlvbnMgZm9yIHRoZSB0cmFuc2l0aW9uXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgZmxpcChvcHRpb25zOiBOYXRpdmVUcmFuc2l0aW9uT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBQZXJmb3JtIGEgZmFkZSBhbmltYXRpb25cclxuICAgKlxyXG4gICAqIEBwYXJhbSBvcHRpb25zIHtOYXRpdmVUcmFuc2l0aW9uT3B0aW9uc30gT3B0aW9ucyBmb3IgdGhlIHRyYW5zaXRpb25cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ10gfSlcclxuICBmYWRlKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFBlcmZvcm0gYSBzbGlkZSBhbmltYXRpb25cclxuICAgKlxyXG4gICAqIEBwYXJhbSBvcHRpb25zIHtOYXRpdmVUcmFuc2l0aW9uT3B0aW9uc30gT3B0aW9ucyBmb3IgdGhlIHRyYW5zaXRpb25cclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ10gfSlcclxuICBkcmF3ZXIob3B0aW9uczogTmF0aXZlVHJhbnNpdGlvbk9wdGlvbnMpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUGVyZm9ybSBhIHNsaWRlIGFuaW1hdGlvblxyXG4gICAqXHJcbiAgICogQHBhcmFtIG9wdGlvbnMge05hdGl2ZVRyYW5zaXRpb25PcHRpb25zfSBPcHRpb25zIGZvciB0aGUgdHJhbnNpdGlvblxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBwbGF0Zm9ybXM6IFsnaU9TJ10gfSlcclxuICBjdXJsKG9wdGlvbnM6IE5hdGl2ZVRyYW5zaXRpb25PcHRpb25zKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIEV4ZWN1dGUgcGVuZGluZyB0cmFuc2l0aW9uXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBleGVjdXRlUGVuZGluZ1RyYW5zaXRpb24oKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENhbmNlbCBwZW5kaW5nIHRyYW5zaXRpb25cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGNhbmNlbFBlbmRpbmdUcmFuc2l0aW9uKCk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59XHJcbiJdfQ==