import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var BrowserTab = /** @class */ (function (_super) {
    __extends(BrowserTab, _super);
    function BrowserTab() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BrowserTab.prototype.isAvailable = function () { return cordova(this, "isAvailable", {}, arguments); };
    BrowserTab.prototype.openUrl = function (url) { return cordova(this, "openUrl", {}, arguments); };
    BrowserTab.prototype.close = function () { return cordova(this, "close", {}, arguments); };
    BrowserTab.pluginName = "BrowserTab";
    BrowserTab.plugin = "cordova-plugin-browsertab";
    BrowserTab.pluginRef = "cordova.plugins.browsertab";
    BrowserTab.repo = "https://github.com/google/cordova-plugin-browsertab";
    BrowserTab.platforms = ["Android", "iOS"];
    BrowserTab.decorators = [
        { type: Injectable }
    ];
    return BrowserTab;
}(AwesomeCordovaNativePlugin));
export { BrowserTab };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvYnJvd3Nlci10YWIvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sdUNBQStDLE1BQU0sK0JBQStCLENBQUM7O0lBaUM1RCw4QkFBMEI7Ozs7SUFNdEQsZ0NBQVc7SUFVWCw0QkFBTyxhQUFDLEdBQVc7SUFTbkIsMEJBQUs7Ozs7Ozs7Z0JBMUJSLFVBQVU7O3FCQWpDWDtFQWtDZ0MsMEJBQTBCO1NBQTdDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY29yZSc7XHJcblxyXG4vKipcclxuICogQG5hbWUgQnJvd3NlciBUYWJcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFRoaXMgcGx1Z2luIHByb3ZpZGVzIGFuIGludGVyZmFjZSB0byBpbi1hcHAgYnJvd3NlciB0YWJzIHRoYXQgZXhpc3Qgb24gc29tZSBtb2JpbGUgcGxhdGZvcm1zLCBzcGVjaWZpY2FsbHkgW0N1c3RvbSBUYWJzXShodHRwOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3Rvb2xzL3N1cHBvcnQtbGlicmFyeS9mZWF0dXJlcy5odG1sI2N1c3RvbS10YWJzKSBvbiBBbmRyb2lkIChpbmNsdWRpbmcgdGhlIFtDaHJvbWUgQ3VzdG9tIFRhYnNdKGh0dHBzOi8vZGV2ZWxvcGVyLmNocm9tZS5jb20vbXVsdGlkZXZpY2UvYW5kcm9pZC9jdXN0b210YWJzKSBpbXBsZW1lbnRhdGlvbiksIGFuZCBbU0ZTYWZhcmlWaWV3Q29udHJvbGxlcl0oaHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2xpYnJhcnkvaW9zL2RvY3VtZW50YXRpb24vU2FmYXJpU2VydmljZXMvUmVmZXJlbmNlL1NGU2FmYXJpVmlld0NvbnRyb2xsZXJfUmVmLykgb24gaU9TLlxyXG4gKlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBCcm93c2VyVGFiIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2Jyb3dzZXItdGFiL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYnJvd3NlclRhYjogQnJvd3NlclRhYikge1xyXG4gKlxyXG4gKiAgIGJyb3dzZXJUYWIuaXNBdmFpbGFibGUoKVxyXG4gKiAgICAgLnRoZW4oaXNBdmFpbGFibGUgPT4ge1xyXG4gKiAgICAgICBpZiAoaXNBdmFpbGFibGUpIHtcclxuICogICAgICAgICBicm93c2VyVGFiLm9wZW5VcmwoJ2h0dHBzOi8vaW9uaWMuaW8nKTtcclxuICogICAgICAgfSBlbHNlIHtcclxuICogICAgICAgICAvLyBvcGVuIFVSTCB3aXRoIEluQXBwQnJvd3NlciBpbnN0ZWFkIG9yIFNhZmFyaVZpZXdDb250cm9sbGVyXHJcbiAqICAgICAgIH1cclxuICogICAgIH0pO1xyXG4gKiB9XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgICBwbHVnaW5OYW1lOiAnQnJvd3NlclRhYicsXHJcbiAgICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1icm93c2VydGFiJyxcclxuICAgIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5icm93c2VydGFiJyxcclxuICAgIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vZ29vZ2xlL2NvcmRvdmEtcGx1Z2luLWJyb3dzZXJ0YWInLFxyXG4gICAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEJyb3dzZXJUYWIgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIGlmIEJyb3dzZXJUYWIgb3B0aW9uIGlzIGF2YWlsYWJsZVxyXG4gICAgICogQHJldHVybiB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gY2hlY2sgaXMgc3VjY2Vzc2Z1bCBhbmQgcmV0dXJucyB0cnVlIG9yIGZhbHNlXHJcbiAgICAgKi9cclxuICAgIEBDb3Jkb3ZhKClcclxuICAgIGlzQXZhaWxhYmxlKCk6IFByb21pc2U8YW55PiB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogT3BlbnMgdGhlIHByb3ZpZGVkIFVSTCB1c2luZyBhIGJyb3dzZXIgdGFiXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsICBUaGUgVVJMIHlvdSB3YW50IHRvIG9wZW5cclxuICAgICAqIEByZXR1cm4ge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgdGhhdCByZXNvbHZlcyB3aGVuIGNoZWNrIG9wZW4gd2FzIHN1Y2Nlc3NmdWxcclxuICAgICAqL1xyXG4gICAgQENvcmRvdmEoKVxyXG4gICAgb3BlblVybCh1cmw6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQ2xvc2VzIGJyb3dzZXIgdGFiXHJcbiAgICAgKiBAcmV0dXJuIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2hlbiBjbG9zZSB3YXMgZmluaXNoZWRcclxuICAgICAqL1xyXG4gICAgQENvcmRvdmEoKVxyXG4gICAgY2xvc2UoKTogUHJvbWlzZTxhbnk+IHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbn1cclxuIl19