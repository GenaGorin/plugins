import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var SMS = /** @class */ (function (_super) {
    __extends(SMS, _super);
    function SMS() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SMS.prototype.send = function (phoneNumber, message, options) { return cordova(this, "send", { "successIndex": 3, "errorIndex": 4 }, arguments); };
    SMS.prototype.hasPermission = function () { return cordova(this, "hasPermission", { "platforms": ["Android"] }, arguments); };
    SMS.pluginName = "SMS";
    SMS.plugin = "cordova-sms-plugin";
    SMS.pluginRef = "sms";
    SMS.repo = "https://github.com/cordova-sms/cordova-sms-plugin";
    SMS.platforms = ["Android", "iOS", "Windows", "Windows Phone 8"];
    SMS.decorators = [
        { type: Injectable }
    ];
    return SMS;
}(AwesomeCordovaNativePlugin));
export { SMS };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvc21zL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQW1EbkUsdUJBQTBCOzs7O0lBYWpELGtCQUFJLGFBQUMsV0FBOEIsRUFBRSxPQUFlLEVBQUUsT0FBb0I7SUFZMUUsMkJBQWE7Ozs7Ozs7Z0JBMUJkLFVBQVU7O2NBbkRYO0VBb0R5QiwwQkFBMEI7U0FBdEMsR0FBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcclxuXHJcbi8qKlxyXG4gKiBPcHRpb25zIGZvciBzZW5kaW5nIGFuIFNNU1xyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBTbXNPcHRpb25zIHtcclxuICAvKipcclxuICAgKiBTZXQgdG8gdHJ1ZSB0byByZXBsYWNlIFxcbiBieSBhIG5ldyBsaW5lLiBEZWZhdWx0OiBmYWxzZVxyXG4gICAqL1xyXG4gIHJlcGxhY2VMaW5lQnJlYWtzPzogYm9vbGVhbjtcclxuXHJcbiAgYW5kcm9pZD86IFNtc09wdGlvbnNBbmRyb2lkO1xyXG59XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFNtc09wdGlvbnNBbmRyb2lkIHtcclxuICAvKipcclxuICAgKiBTZXQgdG8gXCJJTlRFTlRcIiB0byBzZW5kIFNNUyB3aXRoIHRoZSBuYXRpdmUgYW5kcm9pZCBTTVMgbWVzc2FnaW5nLiBMZWF2aW5nIGl0IGVtcHR5IHdpbGwgc2VuZCB0aGUgU01TIHdpdGhvdXQgb3BlbmluZyBhbnkgYXBwLlxyXG4gICAqL1xyXG4gIGludGVudD86IHN0cmluZztcclxufVxyXG5cclxuLyoqXHJcbiAqIEBuYW1lIFNNU1xyXG4gKiBAZGVzY3JpcHRpb25cclxuICpcclxuICogUmVxdWlyZXMgQ29yZG92YSBwbHVnaW46IGNvcmRvdmEtc21zLXBsdWdpbi4gRm9yIG1vcmUgaW5mbywgcGxlYXNlIHNlZSB0aGUgW1NNUyBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2NvcmRvdmEtc21zL2NvcmRvdmEtc21zLXBsdWdpbikuXHJcbiAqIEB1c2FnZVxyXG4gKiBgYGB0eXBlc2NyaXB0XHJcbiAqIGltcG9ydCB7IFNNUyB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9zbXMvbmd4JztcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzbXM6IFNNUykgeyB9XHJcbiAqXHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKlxyXG4gKiAvLyBTZW5kIGEgdGV4dCBtZXNzYWdlIHVzaW5nIGRlZmF1bHQgb3B0aW9uc1xyXG4gKiB0aGlzLnNtcy5zZW5kKCc0MTYxMjM0NTYnLCAnSGVsbG8gd29ybGQhJyk7XHJcbiAqIGBgYFxyXG4gKiBAaW50ZXJmYWNlc1xyXG4gKiBTbXNPcHRpb25zXHJcbiAqIFNtc09wdGlvbnNBbmRyb2lkXHJcbiAqL1xyXG5AUGx1Z2luKHtcclxuICBwbHVnaW5OYW1lOiAnU01TJyxcclxuICBwbHVnaW46ICdjb3Jkb3ZhLXNtcy1wbHVnaW4nLFxyXG4gIHBsdWdpblJlZjogJ3NtcycsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9jb3Jkb3ZhLXNtcy9jb3Jkb3ZhLXNtcy1wbHVnaW4nLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUycsICdXaW5kb3dzJywgJ1dpbmRvd3MgUGhvbmUgOCddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBTTVMgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogU2VuZHMgc21zIHRvIGEgbnVtYmVyXHJcbiAgICpcclxuICAgKiBAcGFyYW0gcGhvbmVOdW1iZXIge3N0cmluZ3xzdHJpbmdbXX0gUGhvbmUgbnVtYmVyXHJcbiAgICogQHBhcmFtIG1lc3NhZ2Uge3N0cmluZ30gTWVzc2FnZVxyXG4gICAqIEBwYXJhbSBvcHRpb25zIHtTbXNPcHRpb25zfSBPcHRpb25zXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmVzb2x2ZXMgcHJvbWlzZSB3aGVuIHRoZSBTTVMgaGFzIGJlZW4gc2VudFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHtcclxuICAgIHN1Y2Nlc3NJbmRleDogMyxcclxuICAgIGVycm9ySW5kZXg6IDQsXHJcbiAgfSlcclxuICBzZW5kKHBob25lTnVtYmVyOiBzdHJpbmcgfCBzdHJpbmdbXSwgbWVzc2FnZTogc3RyaW5nLCBvcHRpb25zPzogU21zT3B0aW9ucyk6IFByb21pc2U8YW55PiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBUaGlzIGZ1bmN0aW9uIGxldHMgeW91IGtub3cgaWYgdGhlIGFwcCBoYXMgcGVybWlzc2lvbiB0byBzZW5kIFNNU1xyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8Ym9vbGVhbj59IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIGJvb2xlYW4gdGhhdCBpbmRpY2F0ZXMgaWYgd2UgaGF2ZSBwZXJtaXNzaW9uXHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnXSxcclxuICB9KVxyXG4gIGhhc1Blcm1pc3Npb24oKTogUHJvbWlzZTxib29sZWFuPiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG59XHJcbiJdfQ==