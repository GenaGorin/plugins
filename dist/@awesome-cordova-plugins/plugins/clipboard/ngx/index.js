import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var Clipboard = /** @class */ (function (_super) {
    __extends(Clipboard, _super);
    function Clipboard() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Clipboard.prototype.copy = function (text) { return cordova(this, "copy", {}, arguments); };
    Clipboard.prototype.paste = function () { return cordova(this, "paste", {}, arguments); };
    Clipboard.prototype.clear = function () { return cordova(this, "clear", {}, arguments); };
    Clipboard.pluginName = "Clipboard";
    Clipboard.plugin = "cordova-clipboard";
    Clipboard.pluginRef = "cordova.plugins.clipboard";
    Clipboard.repo = "https://github.com/ihadeed/cordova-clipboard";
    Clipboard.platforms = ["Android", "iOS", "Windows Phone 8"];
    Clipboard.decorators = [
        { type: Injectable }
    ];
    return Clipboard;
}(AwesomeCordovaNativePlugin));
export { Clipboard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvY2xpcGJvYXJkL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQXFDN0QsNkJBQTBCOzs7O0lBUXZELHdCQUFJLGFBQUMsSUFBWTtJQVVqQix5QkFBSztJQVVMLHlCQUFLOzs7Ozs7O2dCQTdCTixVQUFVOztvQkFyQ1g7RUFzQytCLDBCQUEwQjtTQUE1QyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb3Jkb3ZhLCBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xyXG4vKipcclxuICogQG5hbWUgQ2xpcGJvYXJkXHJcbiAqIEBwcmVtaWVyIGNsaXBib2FyZFxyXG4gKiBAZGVzY3JpcHRpb25cclxuICogQ2xpcGJvYXJkIG1hbmFnZW1lbnQgcGx1Z2luIGZvciBDb3Jkb3ZhIHRoYXQgc3VwcG9ydHMgaU9TLCBBbmRyb2lkLCBhbmQgV2luZG93cyBQaG9uZSA4LlxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBDbGlwYm9hcmQgfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvY2xpcGJvYXJkL25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgY2xpcGJvYXJkOiBDbGlwYm9hcmQpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICpcclxuICogdGhpcy5jbGlwYm9hcmQuY29weSgnSGVsbG8gd29ybGQnKTtcclxuICpcclxuICogdGhpcy5jbGlwYm9hcmQucGFzdGUoKS50aGVuKFxyXG4gKiAgICAocmVzb2x2ZTogc3RyaW5nKSA9PiB7XHJcbiAqICAgICAgIGFsZXJ0KHJlc29sdmUpO1xyXG4gKiAgICAgfSxcclxuICogICAgIChyZWplY3Q6IHN0cmluZykgPT4ge1xyXG4gKiAgICAgICBhbGVydCgnRXJyb3I6ICcgKyByZWplY3QpO1xyXG4gKiAgICAgfVxyXG4gKiAgICk7XHJcbiAqXHJcbiAqIHRoaXMuY2xpcGJvYXJkLmNsZWFyKCk7XHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0NsaXBib2FyZCcsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1jbGlwYm9hcmQnLFxyXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5jbGlwYm9hcmQnLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vaWhhZGVlZC9jb3Jkb3ZhLWNsaXBib2FyZCcsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJywgJ1dpbmRvd3MgUGhvbmUgOCddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBDbGlwYm9hcmQgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogQ29waWVzIHRoZSBnaXZlbiB0ZXh0XHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCBUZXh0IHRoYXQgZ2V0cyBjb3BpZWQgb24gdGhlIHN5c3RlbSBjbGlwYm9hcmRcclxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fSBSZXR1cm5zIGEgcHJvbWlzZSBhZnRlciB0aGUgdGV4dCBoYXMgYmVlbiBjb3BpZWRcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgY29weSh0ZXh0OiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogUGFzdGVzIHRoZSB0ZXh0IHN0b3JlZCBpbiBjbGlwYm9hcmRcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59IFJldHVybnMgYSBwcm9taXNlIGFmdGVyIHRoZSB0ZXh0IGhhcyBiZWVuIHBhc3RlZFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBwYXN0ZSgpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2xlYXIgdGhlIHRleHQgc3RvcmVkIGluIGNsaXBib2FyZFxyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn0gUmV0dXJucyBhIHByb21pc2UgYWZ0ZXIgdGhlIHRleHQgaGFzIGJlZW4gY2xlYW5lZFxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKClcclxuICBjbGVhcigpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=