import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Observable } from 'rxjs';
var LaunchReview = /** @class */ (function (_super) {
    __extends(LaunchReview, _super);
    function LaunchReview() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LaunchReview.prototype.launch = function (appId) { return cordova(this, "launch", { "platforms": ["Android", "iOS"], "callbackOrder": "reverse" }, arguments); };
    LaunchReview.prototype.rating = function () { return cordova(this, "rating", { "observable": true }, arguments); };
    LaunchReview.prototype.isRatingSupported = function () { return cordova(this, "isRatingSupported", { "platforms": ["Android", "iOS"], "sync": true }, arguments); };
    LaunchReview.pluginName = "LaunchReview";
    LaunchReview.plugin = "cordova-launch-review";
    LaunchReview.pluginRef = "LaunchReview";
    LaunchReview.repo = "https://github.com/dpa99c/cordova-launch-review";
    LaunchReview.platforms = ["Android", "iOS"];
    LaunchReview.decorators = [
        { type: Injectable }
    ];
    return LaunchReview;
}(AwesomeCordovaNativePlugin));
export { LaunchReview };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvbGF1bmNoLXJldmlldy9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyx1Q0FBK0MsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDOztJQWtDQSxnQ0FBMEI7Ozs7SUFXMUQsNkJBQU0sYUFBQyxLQUFjO0lBZXJCLDZCQUFNO0lBV04sd0NBQWlCOzs7Ozs7O2dCQXRDbEIsVUFBVTs7dUJBbkNYO0VBb0NrQywwQkFBMEI7U0FBL0MsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29yZG92YSwgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4sIFBsdWdpbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9jb3JlJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIExhdW5jaCBSZXZpZXdcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqXHJcbiAqIEFzc2lzdHMgaW4gbGVhdmluZyB1c2VyIHJldmlld3MvcmF0aW5ncyBpbiB0aGUgQXBwIFN0b3Jlcy5cclxuICogLSBMYXVuY2hlcyB0aGUgcGxhdGZvcm0ncyBBcHAgU3RvcmUgcGFnZSBmb3IgdGhlIGN1cnJlbnQgYXBwIGluIG9yZGVyIGZvciB0aGUgdXNlciB0byBsZWF2ZSBhIHJldmlldy5cclxuICogLSBPbiBpT1MgKDEwLjMgYW5kIGFib3ZlKSBpbnZva2VzIHRoZSBuYXRpdmUgaW4tYXBwIHJhdGluZyBkaWFsb2cgd2hpY2ggYWxsb3dzIGEgdXNlciB0byByYXRlIHlvdXIgYXBwIHdpdGhvdXQgbmVlZGluZyB0byBvcGVuIHRoZSBBcHAgU3RvcmUuXHJcbiAqIEB1c2FnZVxyXG4gKiBgYGB0eXBlc2NyaXB0XHJcbiAqIGltcG9ydCB7IExhdW5jaFJldmlldyB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy9sYXVuY2gtcmV2aWV3L25neCc7XHJcbiAqXHJcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgbGF1bmNoUmV2aWV3OiBMYXVuY2hSZXZpZXcpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogdGhpcy5sYXVuY2hSZXZpZXcubGF1bmNoKClcclxuICogICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGxhdW5jaGVkIHN0b3JlIGFwcCcpKTtcclxuICpcclxuICogaWYodGhpcy5sYXVuY2hSZXZpZXcuaXNSYXRpbmdTdXBwb3J0ZWQoKSl7XHJcbiAqICAgdGhpcy5sYXVuY2hSZXZpZXcucmF0aW5nKClcclxuICogICAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdTdWNjZXNzZnVsbHkgbGF1bmNoZWQgcmF0aW5nIGRpYWxvZycpKTtcclxuICogfVxyXG4gKiBgYGBcclxuICovXHJcbkBQbHVnaW4oe1xyXG4gIHBsdWdpbk5hbWU6ICdMYXVuY2hSZXZpZXcnLFxyXG4gIHBsdWdpbjogJ2NvcmRvdmEtbGF1bmNoLXJldmlldycsXHJcbiAgcGx1Z2luUmVmOiAnTGF1bmNoUmV2aWV3JyxcclxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2RwYTk5Yy9jb3Jkb3ZhLWxhdW5jaC1yZXZpZXcnLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBMYXVuY2hSZXZpZXcgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogTGF1bmNoZXMgQXBwIFN0b3JlIG9uIGN1cnJlbnQgcGxhdGZvcm0gaW4gb3JkZXIgdG8gbGVhdmUgYSByZXZpZXcgZm9yIGdpdmVuIGFwcC5cclxuICAgKlxyXG4gICAqIEBwYXJhbSBhcHBJZCB7c3RyaW5nfSAtIChvcHRpb25hbCkgdGhlIHBsYXRmb3JtLXNwZWNpZmljIGFwcCBJRCB0byB1c2UgdG8gb3BlbiB0aGUgcGFnZSBpbiB0aGUgc3RvcmUgYXBwLlxyXG4gICAqIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBwbHVnaW4gd2lsbCB1c2UgdGhlIGFwcCBJRCBmb3IgdGhlIGFwcCBpbiB3aGljaCB0aGUgcGx1Z2luIGlzIGNvbnRhaW5lZC5cclxuICAgKiBPbiBBbmRyb2lkIHRoaXMgaXMgdGhlIGZ1bGwgcGFja2FnZSBuYW1lIG9mIHRoZSBhcHAuIEZvciBleGFtcGxlLCBmb3IgR29vZ2xlIE1hcHM6IGBjb20uZ29vZ2xlLmFuZHJvaWQuYXBwcy5tYXBzYFxyXG4gICAqIE9uIGlPUyB0aGlzIGlzIHRoZSBBcHBsZSBJRCBvZiB0aGUgYXBwLiBGb3IgZXhhbXBsZSwgZm9yIEdvb2dsZSBNYXBzOiBgNTg1MDI3MzU0YFxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPHZvaWQ+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyB9KVxyXG4gIGxhdW5jaChhcHBJZD86IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW52b2tlcyB0aGUgbmF0aXZlIGluLWFwcCByYXRpbmcgZGlhbG9nIHdoaWNoIGFsbG93cyBhIHVzZXIgdG8gcmF0ZSB5b3VyIGFwcCB3aXRob3V0IG5lZWRpbmcgdG8gb3BlbiB0aGUgQXBwIFN0b3JlLlxyXG4gICAqIFJlcXVpcmVzIGlPUyAxMC4zIGFuZCBhYm92ZTogQ2FsbGluZyB0aGlzIG9uIGFueSBwbGF0Zm9ybS92ZXJzaW9uIG90aGVyIHRoYW4gaU9TIDEwLjMrIHdpbGwgcmVzdWx0IGluIHRoZSBlcnJvciBjYWxsYmFjay5cclxuICAgKiBTdWNjZXNzIGNhbGxiYWNrIHdpbGwgYmUgY2FsbGVkIHVwIHRvIDMgdGltZXM6XHJcbiAgICogLSBGaXJzdDogYWZ0ZXIgYExhdW5jaFJldmlldy5yYXRpbmcoKWAgaXMgY2FsbGVkIGFuZCB0aGUgcmVxdWVzdCB0byBzaG93IHRoZSBkaWFsb2cgaXMgc3VjY2Vzc2Z1bC4gV2lsbCBiZSBwYXNzZWQgdGhlIHZhbHVlIGByZXF1ZXN0ZWRgLlxyXG4gICAqIC0gU2Vjb25kOiBpZiBhbmQgd2hlbiB0aGUgUmF0aW5nIGRpYWxvZyBpcyBhY3R1YWxseSBkaXNwbGF5ZWQuICBXaWxsIGJlIHBhc3NlZCB0aGUgdmFsdWUgYHNob3duYC5cclxuICAgKiAtIFRoaXJkOiBpZiBhbmQgd2hlbiB0aGUgUmF0aW5nIGRpYWxvZyBpcyBkaXNtaXNzZWQuICBXaWxsIGJlIHBhc3NlZCB0aGUgdmFsdWUgYGRpc21pc3NlZGAuXHJcbiAgICpcclxuICAgKiBAcmV0dXJucyB7T2JzZXJ2YWJsZTxzdHJpbmc+fVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgb2JzZXJ2YWJsZTogdHJ1ZSB9KVxyXG4gIHJhdGluZygpOiBPYnNlcnZhYmxlPHN0cmluZz4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogSW5kaWNhdGVzIGlmIHRoZSBjdXJyZW50IHBsYXRmb3JtL3ZlcnNpb24gc3VwcG9ydHMgaW4tYXBwIHJhdGluZ3MgZGlhbG9nLCBpLmUuIGNhbGxpbmcgTGF1bmNoUmV2aWV3LnJhdGluZygpLlxyXG4gICAqIFdpbGwgcmV0dXJuIHRydWUgaWYgY3VycmVudCBwbGF0Zm9ybSBpcyBpT1MgMTAuMyBvciBhYm92ZS5cclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAqL1xyXG4gIEBDb3Jkb3ZhKHsgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sIHN5bmM6IHRydWUgfSlcclxuICBpc1JhdGluZ1N1cHBvcnRlZCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbn1cclxuIl19