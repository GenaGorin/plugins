import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var FirebaseCrash = /** @class */ (function (_super) {
    __extends(FirebaseCrash, _super);
    function FirebaseCrash() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirebaseCrash.prototype.log = function (message) { return cordova(this, "log", { "sync": true }, arguments); };
    FirebaseCrash.prototype.logError = function (message) { return cordova(this, "logError", { "sync": true }, arguments); };
    FirebaseCrash.prototype.setUserId = function (userId) { return cordova(this, "setUserId", { "sync": true }, arguments); };
    FirebaseCrash.pluginName = "FirebaseCrash";
    FirebaseCrash.plugin = "cordova-plugin-firebase-crash";
    FirebaseCrash.pluginRef = "cordova.plugins.firebase.crashlytics";
    FirebaseCrash.repo = "https://github.com/chemerisuk/cordova-plugin-firebase-crash";
    FirebaseCrash.platforms = ["Android", "iOS"];
    FirebaseCrash.decorators = [
        { type: Injectable }
    ];
    return FirebaseCrash;
}(AwesomeCordovaNativePlugin));
export { FirebaseCrash };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvZmlyZWJhc2UtY3Jhc2gvbmd4L2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sdUNBQStDLE1BQU0sK0JBQStCLENBQUM7O0lBNEJ6RCxpQ0FBMEI7Ozs7SUFTM0QsMkJBQUcsYUFBQyxPQUFlO0lBWW5CLGdDQUFRLGFBQUMsT0FBZTtJQVl4QixpQ0FBUyxhQUFDLE1BQWM7Ozs7Ozs7Z0JBbEN6QixVQUFVOzt3QkE1Qlg7RUE2Qm1DLDBCQUEwQjtTQUFoRCxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb3Jkb3ZhLCBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiwgUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xyXG5cclxuLyoqXHJcbiAqIEBuYW1lIEZpcmViYXNlQ3Jhc2hcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFRoaXMgcGx1Z2luIGJyaW5ncyBjcmFzaCByZXBvcnRpbmcgZnJvbSBHb29nbGUgRmlyZWJhc2UgdG8geW91ciBDb3Jkb3ZhIHByb2plY3QhIEFuZHJvaWQgYW5kIGlPUyBzdXBwb3J0ZWQuXHJcbiAqIEB1c2FnZVxyXG4gKiBgYGB0eXBlc2NyaXB0XHJcbiAqIGltcG9ydCB7IEZpcmViYXNlQ3Jhc2ggfSBmcm9tICdAYXdlc29tZS1jb3Jkb3ZhLXBsdWdpbnMvZmlyZWJhc2UtY3Jhc2gnO1xyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIGZpcmViYXNlQ3Jhc2g6IEZpcmViYXNlQ3Jhc2gpIHsgfVxyXG4gKlxyXG4gKiAuLi5cclxuICpcclxuICogdGhpcy5maXJlYmFzZUNyYXNoLnNldFVzZXJJZCgnMTIzNDU2Nzg5Jyk7XHJcbiAqIHRoaXMuZmlyZWJhc2VDcmFzaC5sb2coJ21lc3NhZ2UnKTtcclxuICogdGhpcy5maXJlYmFzZUNyYXNoLmxvZ0Vycm9yKCdub24gZmF0YWwgZXhjZXB0aW9uJyk7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0ZpcmViYXNlQ3Jhc2gnLFxyXG4gIHBsdWdpbjogJ2NvcmRvdmEtcGx1Z2luLWZpcmViYXNlLWNyYXNoJyxcclxuICBwbHVnaW5SZWY6ICdjb3Jkb3ZhLnBsdWdpbnMuZmlyZWJhc2UuY3Jhc2hseXRpY3MnLFxyXG4gIHJlcG86ICdodHRwczovL2dpdGh1Yi5jb20vY2hlbWVyaXN1ay9jb3Jkb3ZhLXBsdWdpbi1maXJlYmFzZS1jcmFzaCcsXHJcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIEZpcmViYXNlQ3Jhc2ggZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogQWRkIGxvZ2dpbmcgdGhhdCB3aWxsIGJlIHNlbnQgd2l0aCB5b3VyIGNyYXNoIGRhdGEgaW4gY2FzZSBvZiBhcHAgY3Jhc2guXHJcbiAgICogaHR0cHM6Ly9maXJlYmFzZS5nb29nbGUuY29tL2RvY3MvY3Jhc2hseXRpY3MvY3VzdG9taXplLWNyYXNoLXJlcG9ydHM/YXV0aHVzZXI9MCNhZGRfY3VzdG9tX2xvZ3NcclxuICAgKlxyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBsb2cobWVzc2FnZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIExvZyBub24tZmF0YWwgZXhjZXB0aW9ucyBpbiBhZGRpdGlvbiB0byBhdXRvbWF0aWNhbGx5IHJlcG9ydGVkIGFwcCBjcmFzaGVzLlxyXG4gICAqIGh0dHBzOi8vZmlyZWJhc2UuZ29vZ2xlLmNvbS9kb2NzL2NyYXNobHl0aWNzL2N1c3RvbWl6ZS1jcmFzaC1yZXBvcnRzP2F1dGh1c2VyPTAjbG9nX25vbi1mYXRhbF9leGNlcHRpb25zXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZVxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XHJcbiAgICovXHJcbiAgQENvcmRvdmEoeyBzeW5jOiB0cnVlIH0pXHJcbiAgbG9nRXJyb3IobWVzc2FnZTogc3RyaW5nKTogUHJvbWlzZTxhbnk+IHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFNldHMgdGhlIHVzZXIgaWRlbnRpZmllciBwcm9wZXJ0eSBmb3IgY3Jhc2hseXRpY3MgcmVwb3J0aW5nLlxyXG4gICAqIGh0dHBzOi8vZmlyZWJhc2UuZ29vZ2xlLmNvbS9kb2NzL2NyYXNobHl0aWNzL2N1c3RvbWl6ZS1jcmFzaC1yZXBvcnRzP2F1dGh1c2VyPTAjc2V0X3VzZXJfaWRzXHJcbiAgICpcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gdXNlcklkIHZhbHVlIHRvIHNldCB0aGUgdXNlcklkXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cclxuICAgKi9cclxuICBAQ29yZG92YSh7IHN5bmM6IHRydWUgfSlcclxuICBzZXRVc2VySWQodXNlcklkOiBzdHJpbmcpOiBQcm9taXNlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=