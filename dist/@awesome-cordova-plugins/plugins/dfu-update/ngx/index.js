import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
import { Observable } from 'rxjs';
var DfuUpdate = /** @class */ (function (_super) {
    __extends(DfuUpdate, _super);
    function DfuUpdate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DfuUpdate.prototype.updateFirmware = function (options) { return cordova(this, "updateFirmware", { "observable": true, "callbackOrder": "reverse" }, arguments); };
    DfuUpdate.pluginName = "DfuUpdate";
    DfuUpdate.plugin = "cordova-plugin-dfu-update";
    DfuUpdate.pluginRef = "window.DfuUpdate";
    DfuUpdate.repo = "https://github.com/EinfachHans/cordova-plugin-dfu-update";
    DfuUpdate.install = "ionic cordova plugin add cordova-plugin-dfu-update --variable ANDROID_NORDIC_VERSION=\"1.11.0\"";
    DfuUpdate.installVariables = ["ANDROID_NORDIC_VERSION"];
    DfuUpdate.platforms = ["Android", "iOS"];
    DfuUpdate.decorators = [
        { type: Injectable }
    ];
    return DfuUpdate;
}(AwesomeCordovaNativePlugin));
export { DfuUpdate };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvZGZ1LXVwZGF0ZS9uZ3gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyx1Q0FBK0MsTUFBTSwrQkFBK0IsQ0FBQztBQUM1RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sTUFBTSxDQUFDOztJQWlESCw2QkFBMEI7Ozs7SUFXdkQsa0NBQWMsYUFBQyxPQUFzQjs7Ozs7Ozs7O2dCQVp0QyxVQUFVOztvQkFsRFg7RUFtRCtCLDBCQUEwQjtTQUE1QyxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQbHVnaW4sIENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFVwZGF0ZU9wdGlvbnMge1xyXG4gIC8qKlxyXG4gICAqIEEgc3RyaW5nIHRoYXQgY29udGFpbnMgdGhlIGlkZW50aWZpZXIgZm9yIHRoZSBCbHVldG9vdGggTEUgZGV2aWNlIHRvIHVwZGF0ZS4gSXQgd2lsbCBlaXRoZXIgYmUgYSBNQUMgYWRkcmVzcyAob24gQW5kcm9pZCkgb3IgYSBVVUlEIChvbiBpT1MpLlxyXG4gICAqL1xyXG4gIGRldmljZUlkOiBzdHJpbmc7XHJcblxyXG4gIC8qKlxyXG4gICAqIEEgc3RyaW5nIHRoYXQgaXMgdGhlIHBhdGggdG8gdGhlIGZpbGUgdG8gdXNlIGluIHRoZSB1cGRhdGUuIEl0IGNhbiBiZSBlaXRoZXIgaW4gZWl0aGVyIGBjZHZmaWxlOi8vYCBvciBgZmlsZTovL2AgZm9ybWF0LlxyXG4gICAqL1xyXG4gIGZpbGVVcmw6IHN0cmluZztcclxuXHJcbiAgLyoqXHJcbiAgICogVGhlIFBhY2tldFJlY2VpcHROb3RpZmljYXRpb25zVmFsdWUgKERlZmF1bHQgdG8gMTApXHJcbiAgICovXHJcbiAgcGFja2V0UmVjZWlwdE5vdGlmaWNhdGlvbnNWYWx1ZT86IG51bWJlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIEBuYW1lIERmdSBVcGRhdGVcclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIFRoaXMgcGx1Z2luIGlzIGEgV3JhcHBlciB0byB1c2UgTm9yZGljIFNlbWljb25kdWN0b3IncyBEZXZpY2UgRmlybXdhcmUgVXBkYXRlIChERlUpIHNlcnZpY2UgdG8gdXBkYXRlIGEgQmx1ZXRvb3RoIExFIGRldmljZS5cclxuICogQHVzYWdlXHJcbiAqIGBgYHR5cGVzY3JpcHRcclxuICogaW1wb3J0IHsgRGZ1VXBkYXRlIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2RmdS11cGRhdGUvbmd4JztcclxuICpcclxuICpcclxuICogY29uc3RydWN0b3IocHJpdmF0ZSBkZnVVcGRhdGU6IERmdVVwZGF0ZSkgeyB9XHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKlxyXG4gKiB0aGlzLmRmdVVwZGF0ZS51cGRhdGVGaXJtd2FyZSgnZmlsZVVSTCcsICdkZXZpY2VJZGVudGlmaWVyJylcclxuICogICAudGhlbigocmVzOiBhbnkpID0+IGNvbnNvbGUubG9nKHJlcykpXHJcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ0RmdVVwZGF0ZScsXHJcbiAgcGx1Z2luOiAnY29yZG92YS1wbHVnaW4tZGZ1LXVwZGF0ZScsXHJcbiAgcGx1Z2luUmVmOiAnd2luZG93LkRmdVVwZGF0ZScsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9FaW5mYWNoSGFucy9jb3Jkb3ZhLXBsdWdpbi1kZnUtdXBkYXRlJyxcclxuICBpbnN0YWxsOiAnaW9uaWMgY29yZG92YSBwbHVnaW4gYWRkIGNvcmRvdmEtcGx1Z2luLWRmdS11cGRhdGUgLS12YXJpYWJsZSBBTkRST0lEX05PUkRJQ19WRVJTSU9OPVwiMS4xMS4wXCInLFxyXG4gIGluc3RhbGxWYXJpYWJsZXM6IFsnQU5EUk9JRF9OT1JESUNfVkVSU0lPTiddLFxyXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ2lPUyddLFxyXG59KVxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBEZnVVcGRhdGUgZXh0ZW5kcyBBd2Vzb21lQ29yZG92YU5hdGl2ZVBsdWdpbiB7XHJcbiAgLyoqXHJcbiAgICogU3RhcnQgdGhlIEZpcm13YXJlLVVwZGF0ZS1Qcm9jZXNzXHJcbiAgICpcclxuICAgKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgZm9yIHRoZSBwcm9jZXNzXHJcbiAgICogQHJldHVybnMge09ic2VydmFibGU8YW55Pn0gUmV0dXJucyBhIE9ic2VydmFibGUgdGhhdCBlbWl0cyB3aGVuIHNvbWV0aGluZyBoYXBwZW5zXHJcbiAgICovXHJcbiAgQENvcmRvdmEoe1xyXG4gICAgb2JzZXJ2YWJsZTogdHJ1ZSxcclxuICAgIGNhbGxiYWNrT3JkZXI6ICdyZXZlcnNlJyxcclxuICB9KVxyXG4gIHVwZGF0ZUZpcm13YXJlKG9wdGlvbnM6IFVwZGF0ZU9wdGlvbnMpOiBPYnNlcnZhYmxlPGFueT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=