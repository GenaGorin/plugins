import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { AwesomeCordovaNativePlugin, cordova } from '@awesome-cordova-plugins/core';
var ThemeDetection = /** @class */ (function (_super) {
    __extends(ThemeDetection, _super);
    function ThemeDetection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ThemeDetection.prototype.isAvailable = function () { return cordova(this, "isAvailable", {}, arguments); };
    ThemeDetection.prototype.isDarkModeEnabled = function () { return cordova(this, "isDarkModeEnabled", {}, arguments); };
    ThemeDetection.pluginName = "ThemeDetection";
    ThemeDetection.plugin = "cordova-plugin-theme-detection";
    ThemeDetection.pluginRef = "cordova.plugins.ThemeDetection";
    ThemeDetection.repo = "https://github.com/mariusbackes/cordova-plugin-theme-detection";
    ThemeDetection.install = "cordova plugin add cordova-plugin-theme-detection";
    ThemeDetection.installVariables = [];
    ThemeDetection.platforms = ["iOS", "Android"];
    ThemeDetection.decorators = [
        { type: Injectable }
    ];
    return ThemeDetection;
}(AwesomeCordovaNativePlugin));
export { ThemeDetection };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL3BsdWdpbnMvdGhlbWUtZGV0ZWN0aW9uL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLHVDQUErQyxNQUFNLCtCQUErQixDQUFDOztJQStDeEQsa0NBQTBCOzs7O0lBTzVELG9DQUFXO0lBVVgsMENBQWlCOzs7Ozs7Ozs7Z0JBbEJsQixVQUFVOzt5QkEvQ1g7RUFnRG9DLDBCQUEwQjtTQUFqRCxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBQbHVnaW4sIENvcmRvdmEsIEF3ZXNvbWVDb3Jkb3ZhTmF0aXZlUGx1Z2luIH0gZnJvbSAnQGF3ZXNvbWUtY29yZG92YS1wbHVnaW5zL2NvcmUnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBUaGVtZURldGVjdGlvblJlc3BvbnNlIHtcclxuICAvLyBCb29sZWFuIHZhbHVlIGFib3V0IHRoZSBzdGF0dXMgb2YgdGhlIHJlcXVlc3RcclxuICB2YWx1ZTogYm9vbGVhbjtcclxuXHJcbiAgLy8gTWVzc2FnZSBmb3IgcmVhZGFibGUgdXNhZ2VcclxuICBtZXNzYWdlOiBzdHJpbmc7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAYmV0YVxyXG4gKiBAbmFtZSBUaGVtZSBEZXRlY3Rpb25cclxuICogQGRlc2NyaXB0aW9uXHJcbiAqIENvcmRvdmEgcGx1Z2luIHRvIGRldGVjdCB3aGV0aGVyIGRhcmsgbW9kZSBpcyBlbmFibGVkIG9yIG5vdFxyXG4gKiBAdXNhZ2VcclxuICogYGBgdHlwZXNjcmlwdFxyXG4gKiBpbXBvcnQgeyBUaGVtZURldGVjdGlvbiB9IGZyb20gJ0Bhd2Vzb21lLWNvcmRvdmEtcGx1Z2lucy90aGVtZS1kZXRlY3Rpb24nO1xyXG4gKlxyXG4gKlxyXG4gKiBjb25zdHJ1Y3Rvcihwcml2YXRlIHRoZW1lRGV0ZWN0aW9uOiBUaGVtZURldGVjdGlvbikgeyB9XHJcbiAqXHJcbiAqIC4uLlxyXG4gKlxyXG4gKiB0aGlzLnRoZW1lRGV0ZWN0aW9uLmlzQXZhaWxhYmxlKClcclxuICogICAudGhlbigocmVzOiBUaGVtZURldGVjdGlvblJlc3BvbnNlKSA9PiB7XHJcbiAqICAgICAgaWYocmVzLnZhbHVlKSB7XHJcbiAqICAgICAgICB0aGlzLnRoZW1lRGV0ZWN0aW9uLmlzRGFya01vZGVFbmFibGVkKCkudGhlbigocmVzOiBUaGVtZURldGVjdGlvblJlc3BvbnNlKSA9PiB7XHJcbiAqICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XHJcbiAqICAgICAgICB9KVxyXG4gKiAgICAgICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XHJcbiAqICAgICAgfVxyXG4gKiAgIH0pXHJcbiAqICAgLmNhdGNoKChlcnJvcjogYW55KSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XHJcbiAqXHJcbiAqIGBgYFxyXG4gKi9cclxuQFBsdWdpbih7XHJcbiAgcGx1Z2luTmFtZTogJ1RoZW1lRGV0ZWN0aW9uJyxcclxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi10aGVtZS1kZXRlY3Rpb24nLFxyXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5UaGVtZURldGVjdGlvbicsXHJcbiAgcmVwbzogJ2h0dHBzOi8vZ2l0aHViLmNvbS9tYXJpdXNiYWNrZXMvY29yZG92YS1wbHVnaW4tdGhlbWUtZGV0ZWN0aW9uJyxcclxuICBpbnN0YWxsOiAnY29yZG92YSBwbHVnaW4gYWRkIGNvcmRvdmEtcGx1Z2luLXRoZW1lLWRldGVjdGlvbicsXHJcbiAgaW5zdGFsbFZhcmlhYmxlczogW10sXHJcbiAgcGxhdGZvcm1zOiBbJ2lPUycsICdBbmRyb2lkJ10sXHJcbn0pXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIFRoZW1lRGV0ZWN0aW9uIGV4dGVuZHMgQXdlc29tZUNvcmRvdmFOYXRpdmVQbHVnaW4ge1xyXG4gIC8qKlxyXG4gICAqXHJcbiAgICogQHJldHVybnMge1Byb21pc2U8VGhlbWVEZXRlY3Rpb25SZXNwb25zZT59XHJcbiAgICogIFJldHVybnMgYSBwcm9taXNlIHdpdGggYW4gb2JqZWN0IHRoYXQgaGFzIGEgYm9vbGVhbiBwcm9wZXJ0eSB3aGljaCBnaXZlcyBpbmZvcm1hdGlvbiBpZiB0aGUgZGV0ZWN0aW9uIGlzIGF2YWlsYWJsZSBvciBub3RcclxuICAgKi9cclxuICBAQ29yZG92YSgpXHJcbiAgaXNBdmFpbGFibGUoKTogUHJvbWlzZTxUaGVtZURldGVjdGlvblJlc3BvbnNlPiB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKlxyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPFRoZW1lRGV0ZWN0aW9uUmVzcG9uc2U+fVxyXG4gICAqICBSZXR1cm5zIGEgcHJvbWlzZSB3aXRoIGFuIG9iamVjdCB0aGF0IGhhcyBhIGJvb2xlYW4gcHJvcGVydHkgd2hpY2ggZ2l2ZXMgaW5mb3JtYXRpb24gaWYgZGFyayBtb2RlIGlzIGVuYWJsZWQgb3Igbm90XHJcbiAgICovXHJcbiAgQENvcmRvdmEoKVxyXG4gIGlzRGFya01vZGVFbmFibGVkKCk6IFByb21pc2U8VGhlbWVEZXRlY3Rpb25SZXNwb25zZT4ge1xyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxufVxyXG4iXX0=